library(tidyverse)
library(ggplot2)
library(haven)
library(readxl)
library(table1)
# library(ggbeeswarm)
# library(ltmle)
library(Plasmode)
library(SuperLearner)
#library(ctmle)
library(sl3)
library(tmle3)
library(tictoc)
library(doParallel)
library(doRNG)
library(foreach)
library(randomForest)
path <- "~/Desktop/HuangGroup/cvtmle_plasmode"
setwd(paste0(path,"/Code"))
# path <- "/n/holyscratch01/murphy_lab/Users/xmeng/submitted092920"
# setwd(paste0(path))
set.seed(42782)
options(tibble.print_max = 40, tibble.print_min = 30)
no_cores <- detectCores(all.tests = T) - 2
registerDoParallel(cores=no_cores)
# Set simulation parameters
{
sims.ver <- "plas"
# sims.ver <- "5var"
# sims.ver <- "5var.then.plas"
# sims.ver <- "5var.hard"
Effect_Size <- 6.6
plas.seed <- 1111
########
# parameters for plasmode
#######
# p=331 for the whole set
data.ver <- "FULL"
# data.ver <- "13"
size <- 1178
# size <-200
plas_sim_N <- 500; use.subset <- F
generateA <- T
estimateWithMore <- F; p.sim = 100;p.est <- 50
randVar = F # Do we permute variable order?
isHandPick = T; idx.handpick <- c(1,2,5,18, 217)
interact=T
########
# parameters for 5 var, 5var.then.plas
#######
# Nsets <- 10000
# Nsamp <- 3000
Nsets <- 500
Nsamp <- 600
}
source("20200803-Sims-Function.R")
cat(sims.ver)
sims.obj <- general.sim(sims.ver)
if (sims.ver == "plas"|sims.ver == "5var.then.plas"){
plas <- sims.obj$plas
plas_sims <- sims.obj$plas_sims
vars <- sims.obj$vars
}else{
sim_boots <- sims.obj
}
# Plot the regression coefficient in Plasmode simulation
# plot(plas_sims$TrueOutBeta)
plas_sims$outForm
##################################
## PARALLELIZE ANALYSES
##################################
# Set param
{
# DC implementation
source("20200705-DCDR-Functions.R")
# getRES function is now relocated to a separate file (20200720-Algos-code.R)
source("20200720-Algos-code.R")
non.par <- F
# specify which set of learners for SL
if (non.par == T){
### NON-SMOOTH
short_tmle_lib <- SL_param_list
tmle_lib <- lrnr_SL
aipw_lib <- SL.lib
}
else{
# SMOOTH
short_tmle_lib <- SL_list
tmle_lib <- lrnr_SL_param
aipw_lib <- SL.param
}
# aipw_lib <- c("SL.glmnet")
errorhandling="stop"
# errorhandling="remove"
est.interact <- F # Estimate with first order interaction?
N_sims <- 50# this should <= plas_sim_N
doIPW = 1; doLASSO=0;
doAIPW=0; doDCAIPW=0
doManuTMLE=0; doShortTMLE = 0;
doDCTMLE=0
num_cf=0
#control=list()
control=SuperLearner.CV.control(V=2)
}
#########
# run
##########
source("20200904-run-sim-code.R")
##################################
## SUMMARIZE AND VISUALIZE
##################################
library(ggplot2)
library(tidyverse)
summarise.res(boot1)
source("20200816-Result-Summary.R")
summarise.res(boot1)
# library(readxl)
library(dplyr)
library(tictoc)
library('plot.matrix')
setwd("~/Desktop/Harvard/susan/Code")
source("myFunc.R")
dat.path <- "~/Downloads"
dat <- read.csv(paste0(dat.path,"/sedentary-data.csv"))
nrow(dat)
dat$Decision.Time <- FacToChar(dat$Decision.Time)
# dat <- dat %>% mutate(data = sapply(strsplit(Decision.Time, split = " ") ,"[", 1))
id.input <- 10262
# id.input <- 10262
# id.input <- 10336
dat.id <- dat %>% filter(user__username==id.input)%>%
arrange(desc(X))
dat.id <- dat.id %>% mutate(t = 1:nrow(dat.id))
k <- c(1,2,3,4,5)
id.input <- 10262
res <- get.prop.improvement(id.input,dat)
k <- c(1,2,3,4,5)
id.input <- 10262
View(get.prop.improvement)
k.vec <- c(1,2,3,4,5)
id.input <- 10262
res <- get.prop.improvement(id.input,dat)
res
plot.prop.mat(res$prop.improve, res$prop.missing)
id.input <- 10336
res <- get.prop.improvement(id.input,dat)
res
plot.prop.mat(res$prop.improve, res$prop.missing)
k.vec <- c(1,2,3,4,5)
id.input <- 10006
res <- get.prop.improvement(id.input,dat)
res
dat.path
setwd("~/Desktop/HuangGroup/cvtmle_plasmode/Code")
Effect_Size <- 6.6
source("20200816-Result-Summary.R")
path <- "~/Desktop/HuangGroup/cvtmle_plasmode/Code/cluster/submitted092920/"
# path <- "/Users/garethalex/Desktop/HuangGroup/cvtmle_plasmode/Code/"
load(paste0(path,"RDataFiles/result.RData"))
summarise.res(boot1)
# path <- "/Users/garethalex/Desktop/HuangGroup/cvtmle_plasmode/Code/"
load(paste0(path,"RDataFiles/result.RData"))
summarise.res(boot1)
